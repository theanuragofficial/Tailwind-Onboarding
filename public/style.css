/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.absolute {
  position: absolute;
}

.bottom-0 {
  bottom: 0px;
}

.left-0 {
  left: 0px;
}

.-z-10 {
  z-index: -10;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.h-4\/5 {
  height: 80%;
}

.min-h-screen {
  min-height: 100vh;
}

.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}

.w-full {
  width: 100%;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.border {
  border-width: 1px;
}

.bg-gradient-to-tr {
  background-image: linear-gradient(to top right, var(--tw-gradient-stops));
}

.from-\[\#2B2B43\] {
  --tw-gradient-from: #2B2B43 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(43 43 67 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.via-\[\#1E252F\] {
  --tw-gradient-to: rgb(30 37 47 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), #1E252F var(--tw-gradient-via-position), var(--tw-gradient-to);
}

.to-\[\#362140\] {
  --tw-gradient-to: #362140 var(--tw-gradient-to-position);
}

.p-4 {
  padding: 1rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.text-slate-100 {
  --tw-text-opacity: 1;
  color: rgb(241 245 249 / var(--tw-text-opacity));
}

.text-slate-300 {
  --tw-text-opacity: 1;
  color: rgb(203 213 225 / var(--tw-text-opacity));
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.\[grid-template-areas\:\'stack\'\] {
  grid-template-areas: 'stack';
}

.\[\&\>section\#panel-1\]\:bg-\[\#D52EBD\]>section#panel-1 {
  --tw-bg-opacity: 1;
  background-color: rgb(213 46 189 / var(--tw-bg-opacity));
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&\>section\#panel-1_\.dots\>span\.current\]\:bg-\[\#D52EBD\]>section#panel-1 .dots>span.current {
  --tw-bg-opacity: 1;
  background-color: rgb(213 46 189 / var(--tw-bg-opacity));
}

.\[\&\>section\#panel-2\]\:bg-\[\#E6007B\]>section#panel-2 {
  --tw-bg-opacity: 1;
  background-color: rgb(230 0 123 / var(--tw-bg-opacity));
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&\>section\#panel-2_\.dots\>span\.current\]\:bg-\[\#E6007B\]>section#panel-2 .dots>span.current {
  --tw-bg-opacity: 1;
  background-color: rgb(230 0 123 / var(--tw-bg-opacity));
}

.\[\&\>section\#panel-3\]\:bg-\[\#8D51DD\]>section#panel-3 {
  --tw-bg-opacity: 1;
  background-color: rgb(141 81 221 / var(--tw-bg-opacity));
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&\>section\#panel-3_\.dots\>span\.current\]\:bg-\[\#8D51DD\]>section#panel-3 .dots>span.current {
  --tw-bg-opacity: 1;
  background-color: rgb(141 81 221 / var(--tw-bg-opacity));
}

.\[\&\>section\]\:relative>section {
  position: relative;
}

.\[\&\>section\]\:flex>section {
  display: flex;
}

.\[\&\>section\]\:w-full>section {
  width: 100%;
}

.\[\&\>section\]\:max-w-xs>section {
  max-width: 20rem;
}

.\[\&\>section\]\:flex-col>section {
  flex-direction: column;
}

.\[\&\>section\]\:bg-\[\#2A373E\]>section {
  --tw-bg-opacity: 1;
  background-color: rgb(42 55 62 / var(--tw-bg-opacity));
}

.\[\&\>section\]\:p-4>section {
  padding: 1rem;
}

.\[\&\>section\]\:text-center>section {
  text-align: center;
}

.\[\&\>section\]\:shadow-lg>section {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.\[\&\>section\]\:transition-all>section {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.\[\&\>section\]\:duration-500>section {
  transition-duration: 500ms;
}

.\[\&\>section\]\:ease-in-out>section {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.\[\&\>section\]\:\[grid-area\:stack\]>section {
  grid-area: stack;
}

@media (min-width: 640px) {
  .sm\:\[\&\>section\]\:p-8>section {
    padding: 2rem;
  }

  .sm\:\[\&\>section\]\:py-12>section {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&_\#panel-1\]\:z-10 #panel-1 {
  z-index: 10;
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&_\#panel-1\]\:-z-20 #panel-1 {
  z-index: -20;
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&_\#panel-1\]\:-z-10 #panel-1 {
  z-index: -10;
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&_\#panel-1\]\:translate-y-0 #panel-1 {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&_\#panel-1\]\:-translate-y-32 #panel-1 {
  --tw-translate-y: -8rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&_\#panel-1\]\:-translate-y-16 #panel-1 {
  --tw-translate-y: -4rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&_\#panel-1\]\:scale-100 #panel-1 {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&_\#panel-1\]\:scale-\[60\%\] #panel-1 {
  --tw-scale-x: 60%;
  --tw-scale-y: 60%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&_\#panel-1\]\:scale-\[80\%\] #panel-1 {
  --tw-scale-x: 80%;
  --tw-scale-y: 80%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&_\#panel-1\]\:opacity-100 #panel-1 {
  opacity: 1;
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&_\#panel-1\]\:opacity-30 #panel-1 {
  opacity: 0.3;
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&_\#panel-1\]\:opacity-30 #panel-1 {
  opacity: 0.3;
}

@media (min-width: 640px) {
  .peer\/option2:checked ~ .sm\:peer-checked\/option2\:\[\&_\#panel-1\]\:-translate-x-60 #panel-1 {
    --tw-translate-x: -15rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .peer\/option3:checked ~ .sm\:peer-checked\/option3\:\[\&_\#panel-1\]\:-translate-y-20 #panel-1 {
    --tw-translate-y: -5rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .peer\/option3:checked ~ .sm\:peer-checked\/option3\:\[\&_\#panel-1\]\:translate-x-60 #panel-1 {
    --tw-translate-x: 15rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .peer\/option2:checked ~ .sm\:peer-checked\/option2\:\[\&_\#panel-1\]\:scale-\[80\%\] #panel-1 {
    --tw-scale-x: 80%;
    --tw-scale-y: 80%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

.peer\/option1:focus ~ .peer-focus\/option1\:\[\&_\#panel-1_label\]\:border-white #panel-1 label {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.peer\/option1:focus ~ .peer-focus\/option1\:\[\&_\#panel-1_label\]\:text-white #panel-1 label {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&_\#panel-2\]\:-z-10 #panel-2 {
  z-index: -10;
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&_\#panel-2\]\:z-10 #panel-2 {
  z-index: 10;
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&_\#panel-2\]\:-z-20 #panel-2 {
  z-index: -20;
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&_\#panel-2\]\:-translate-y-16 #panel-2 {
  --tw-translate-y: -4rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&_\#panel-2\]\:translate-y-0 #panel-2 {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&_\#panel-2\]\:-translate-y-32 #panel-2 {
  --tw-translate-y: -8rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&_\#panel-2\]\:scale-\[80\%\] #panel-2 {
  --tw-scale-x: 80%;
  --tw-scale-y: 80%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&_\#panel-2\]\:scale-100 #panel-2 {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&_\#panel-2\]\:scale-\[60\%\] #panel-2 {
  --tw-scale-x: 60%;
  --tw-scale-y: 60%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&_\#panel-2\]\:opacity-30 #panel-2 {
  opacity: 0.3;
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&_\#panel-2\]\:opacity-100 #panel-2 {
  opacity: 1;
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&_\#panel-2\]\:opacity-30 #panel-2 {
  opacity: 0.3;
}

@media (min-width: 640px) {
  .peer\/option1:checked ~ .sm\:peer-checked\/option1\:\[\&_\#panel-2\]\:-translate-y-20 #panel-2 {
    --tw-translate-y: -5rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .peer\/option1:checked ~ .sm\:peer-checked\/option1\:\[\&_\#panel-2\]\:translate-x-60 #panel-2 {
    --tw-translate-x: 15rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .peer\/option3:checked ~ .sm\:peer-checked\/option3\:\[\&_\#panel-2\]\:-translate-x-60 #panel-2 {
    --tw-translate-x: -15rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .peer\/option3:checked ~ .sm\:peer-checked\/option3\:\[\&_\#panel-2\]\:scale-\[80\%\] #panel-2 {
    --tw-scale-x: 80%;
    --tw-scale-y: 80%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

.peer\/option2:focus ~ .peer-focus\/option2\:\[\&_\#panel-2_label\]\:border-white #panel-2 label {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.peer\/option2:focus ~ .peer-focus\/option2\:\[\&_\#panel-2_label\]\:text-white #panel-2 label {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&_\#panel-3\]\:-z-20 #panel-3 {
  z-index: -20;
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&_\#panel-3\]\:-z-10 #panel-3 {
  z-index: -10;
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&_\#panel-3\]\:z-10 #panel-3 {
  z-index: 10;
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&_\#panel-3\]\:-translate-y-32 #panel-3 {
  --tw-translate-y: -8rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&_\#panel-3\]\:-translate-y-16 #panel-3 {
  --tw-translate-y: -4rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&_\#panel-3\]\:translate-y-0 #panel-3 {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&_\#panel-3\]\:scale-\[60\%\] #panel-3 {
  --tw-scale-x: 60%;
  --tw-scale-y: 60%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&_\#panel-3\]\:scale-\[80\%\] #panel-3 {
  --tw-scale-x: 80%;
  --tw-scale-y: 80%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&_\#panel-3\]\:scale-100 #panel-3 {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.peer\/option1:checked ~ .peer-checked\/option1\:\[\&_\#panel-3\]\:opacity-30 #panel-3 {
  opacity: 0.3;
}

.peer\/option2:checked ~ .peer-checked\/option2\:\[\&_\#panel-3\]\:opacity-30 #panel-3 {
  opacity: 0.3;
}

.peer\/option3:checked ~ .peer-checked\/option3\:\[\&_\#panel-3\]\:opacity-100 #panel-3 {
  opacity: 1;
}

@media (min-width: 640px) {
  .peer\/option1:checked ~ .sm\:peer-checked\/option1\:\[\&_\#panel-3\]\:-translate-x-60 #panel-3 {
    --tw-translate-x: -15rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .peer\/option2:checked ~ .sm\:peer-checked\/option2\:\[\&_\#panel-3\]\:-translate-y-20 #panel-3 {
    --tw-translate-y: -5rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .peer\/option2:checked ~ .sm\:peer-checked\/option2\:\[\&_\#panel-3\]\:translate-x-60 #panel-3 {
    --tw-translate-x: 15rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .peer\/option1:checked ~ .sm\:peer-checked\/option1\:\[\&_\#panel-3\]\:scale-\[80\%\] #panel-3 {
    --tw-scale-x: 80%;
    --tw-scale-y: 80%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}

.peer\/option3:focus ~ .peer-focus\/option3\:\[\&_\#panel-3_label\]\:border-white #panel-3 label {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.peer\/option3:focus ~ .peer-focus\/option3\:\[\&_\#panel-3_label\]\:text-white #panel-3 label {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.\[\&_\.dots\>span\]\:h-2 .dots>span {
  height: 0.5rem;
}

.\[\&_\.dots\>span\]\:w-2 .dots>span {
  width: 0.5rem;
}

.\[\&_\.dots\>span\]\:rounded-full .dots>span {
  border-radius: 9999px;
}

.\[\&_\.dots\>span\]\:bg-\[\#1C252B\] .dots>span {
  --tw-bg-opacity: 1;
  background-color: rgb(28 37 43 / var(--tw-bg-opacity));
}

.\[\&_\.dots\>span\]\:transition-all .dots>span {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.\[\&_\.dots\>span\]\:delay-500 .dots>span {
  transition-delay: 500ms;
}

.\[\&_\.dots\>span\]\:duration-300 .dots>span {
  transition-duration: 300ms;
}

.\[\&_\.dots\]\:my-12 .dots {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.\[\&_\.dots\]\:mt-auto .dots {
  margin-top: auto;
}

.\[\&_\.dots\]\:flex .dots {
  display: flex;
}

.\[\&_\.dots\]\:justify-center .dots {
  justify-content: center;
}

.\[\&_\.dots\]\:gap-2 .dots {
  gap: 0.5rem;
}

.\[\&_h2\]\:mb-4 h2 {
  margin-bottom: 1rem;
}

.\[\&_h2\]\:text-xl h2 {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.\[\&_h2\]\:font-bold h2 {
  font-weight: 700;
}

.\[\&_h2\]\:uppercase h2 {
  text-transform: uppercase;
}

.\[\&_header\>svg\]\:mx-auto header>svg {
  margin-left: auto;
  margin-right: auto;
}

.\[\&_header\>svg\]\:w-24 header>svg {
  width: 6rem;
}

.\[\&_header\>svg\]\:transition-all header>svg {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.\[\&_header\>svg\]\:duration-300 header>svg {
  transition-duration: 300ms;
}

.\[\&_header\]\:mb-12 header {
  margin-bottom: 3rem;
}

.\[\&_header\]\:space-y-4 header > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.\[\&_label\]\:mt-auto label {
  margin-top: auto;
}

.\[\&_label\]\:w-fit label {
  width: -moz-fit-content;
  width: fit-content;
}

.\[\&_label\]\:cursor-pointer label {
  cursor: pointer;
}

.\[\&_label\]\:rounded-md label {
  border-radius: 0.375rem;
}

.\[\&_label\]\:border label {
  border-width: 1px;
}

.\[\&_label\]\:border-slate-500 label {
  --tw-border-opacity: 1;
  border-color: rgb(100 116 139 / var(--tw-border-opacity));
}

.\[\&_label\]\:px-2 label {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.\[\&_label\]\:py-1 label {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.\[\&_label\]\:text-slate-500 label {
  --tw-text-opacity: 1;
  color: rgb(100 116 139 / var(--tw-text-opacity));
}

.\[\&_label\]\:transition-all label {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.\[\&_label\]\:duration-300 label {
  transition-duration: 300ms;
}

.hover\:\[\&_label\]\:border-white label:hover {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.hover\:\[\&_label\]\:text-white label:hover {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.focus\:\[\&_label\]\:outline-none label:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:\[\&_label\]\:ring-0 label:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.\[\&_p\]\:mb-20 p {
  margin-bottom: 5rem;
}

.\[\&_p\]\:line-clamp-3 p {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
}
